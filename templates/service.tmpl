type {{ .Name }}Params struct {
    {{ range .Params }}
        {{ .Name }} {{ .Type }}
    {{ end }}
}

type {{ .Name }}Query struct {
{{ range $key, $value := .Query }}
    {{ $key }} {{ $value.Type }} `form:"{{ $value.Name }}"`{{ end }}
}

type {{ .Name }}Header struct {
{{ range $key, $value := .Header }}
    {{ $key }} {{ $value.Type }} `form:"{{ $value.Name }}"`{{ end }}
}

{{ if .Body.Schema }}
    {{ if eq .Body.Schema.Type "object" }}
        type {{ .Name }}Body struct {
            {{ if eq .Body.Encoding "json" }}
                {{ range .Body.Schema.Fields }}
                    {{ .Name }} {{ .Type }} `json:"{{ .Tag }}"`{{ end }}
            {{ end }}
            {{ if eq .Body.Encoding "xml" }}
                {{ range .Body.Schema.Fields }}
                    {{ .Name }} {{ .Type }} `xml:"{{ .Tag }}"`{{ end }}
            {{ end }}
            {{ if eq .Body.Encoding "url" }}
                {{ range .Body.Schema.Fields }}
                    {{ .Name }} {{ .Type }} `form:"{{ .Tag }}"`{{ end }}
            {{ end }}
            {{ if eq .Body.Encoding "text" }}
                {{ range .Body.Schema.Fields }}
                    {{ .Name }} {{ .Type }} `json:"{{ .Tag }}"`{{ end }}
            {{ end }}
        }
    {{ end }}

    {{ if eq .Body.Schema.Type "array" }}
        type {{ .Name }} []{{ .Body.Schema.Items.Name }}
    {{ end }}
{{ else }}
    type {{ .Name }}Body struct {
    }
{{ end }}

type {{ .Name }}Request struct {
    {{ .Name }}Params
    {{ .Name }}Query
    {{ .Name }}Header
    {{ .Name }}Body
}

type {{ .Name }}Response struct {
{{ range .Response.Options }}
    {{ if .Type }}*{{ .Type.Name }}{{ end }}{{ end }}
}

type {{ .Name }}Service interface {
    {{ .Name }}(
        ctx context.Context,
        request {{ .Name }}Request,
        err error,
    ) {{ .Name }}Response
}

